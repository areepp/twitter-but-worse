generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String  @id @unique
  email             String  @unique
  username          String  @unique @default(uuid())
  displayName       String
  bio               String  @default("")
  profilePictureUrl String?
  password          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Tweet Tweet[]

  likedTweets LikedTweet[]

  followers Follows[]    @relation("following")
  following Follows[]    @relation("follower")
  replies   ReplyTweet[]
}

model Tweet {
  id               BigInt            @id
  createdAt        DateTime          @default(now())
  text             String
  author           User              @relation(fields: [userId], references: [id])
  userId           String
  likes            LikedTweet[]
  mediaAttachments MediaAttachment[]
  replies          ReplyTweet[]
}

model ReplyTweet {
  id               BigInt            @id
  createdAt        DateTime          @default(now())
  text             String
  author           User              @relation(fields: [userId], references: [id])
  userId           String
  likes            LikedTweet[]
  mediaAttachments MediaAttachment[]
  tweet            Tweet             @relation(fields: [parentTweetId], references: [id])
  parentTweetId    BigInt
  replies          ReplyTweet[]      @relation("ReplyToReply")
  ReplyTweet       ReplyTweet?       @relation("ReplyToReply", fields: [parentReplyId], references: [id])
  parentReplyId    BigInt?
}

model LikedTweet {
  id      Int      @id @default(autoincrement())
  likedAt DateTime @default(now())

  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  tweetId BigInt

  User         User?       @relation(fields: [userId], references: [id])
  userId       String?
  ReplyTweet   ReplyTweet? @relation(fields: [replyTweetId], references: [id])
  replyTweetId BigInt?
}

model MediaAttachment {
  id           Int         @id @default(autoincrement())
  url          String
  Tweet        Tweet?      @relation(fields: [tweetId], references: [id])
  tweetId      BigInt?
  ReplyTweet   ReplyTweet? @relation(fields: [replyTweetId], references: [id])
  replyTweetId BigInt?
}

model Follows {
  follower          User   @relation("follower", fields: [followerUsername], references: [username])
  followerUsername  String
  following         User   @relation("following", fields: [followingUsername], references: [username])
  followingUsername String

  @@id([followerUsername, followingUsername])
}
